@model IEnumerable<ShoppingCart>
@{
    ViewData["Title"] = "Shoppping Cart";
}
<div class="p-4">
    @if (ViewData["Cart"] != null)
    {
        <div class="display-table">
            <div class="d-flex mb-2">
                <h2>Shopping Cart</h2>
                <button class="btn btn-primary ml-auto btn-clearCart">Clear cart</button>
            </div>
            <table class="table table-hover shoppingCart-table">
                <thead>
                    <tr>
                        <th scope="col">Image</th>
                        <th scope="col">Product Name</th>
                        <th scope="col">Description</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Price per Item</th>
                        <th scope="col">Total per Item</th>
                        <th scope="col">&nbsp;</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var obj in Model)
                    {
                        <tr class="product-row">
                            <td>
                                @*<input type="hidden" value="@obj.Product" />*@
                                <img src="~/@obj.ImageUrl" width="60" />
                            </td>
                            <td class="product-name">@obj.ProductName</td>
                            <td>@obj.Description</td>
                            <td>
                                @Html.DropDownList("Quantity",Enumerable.Range(1,obj.AvailableQuantity).Select(i => new SelectListItem{Text = i.ToString(), Value = i.ToString(), Selected=i==obj.Quantity?true:false}),new {@class="form-control product-Quantity", @id = obj.ProductId})
                            </td>
                            <td class="PricePerItem">@obj.PricePerItem</td>
                            <td class="TotalPerItem">@obj.TotalPerItem</td>
                            <td>
                                <div class="container">
                                    <a class="btn btn-danger" asp-action="RemoveFromCart" asp-controller="ShoppingCart" asp-route-productId="@obj.ProductId">
                                        <i class="fa fa-trash" aria-hidden="true"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="container mt-2">
                <div class="row">
                    <div class="col-md-3 offset-9">
                        <div class="d-flex">
                            <div class="d-flex flex-column mr-1 font-weight-bold">
                                <label>Subtotal</label>
                                <label>VAT</label>
                                <label>Total <small class="font-weight-bold">(inc. vat)</small></label>
                            </div>
                            <div class="d-flex flex-column font-weight-bold ml-auto">
                                <label class="SubTotal">: R @ViewData["SubTotal"]</label>
                                <label class="VatOfSubTotal">: R @ViewData["VatOfSubTotal"]</label>
                                <label class="Total">: R @ViewData["Total"]</label>
                            </div>
                        </div>
                        <button class="btn btn-primary w-100 btn-checkout">Checkout</button>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row mt-2">
            <div class="colsm-12 text-center">
                <p>You do not have any items in cart, click <a asp-action="MarketPlace" asp-controller="Home"><b>here</b></a> to add one.</p>
            </div>
        </div>
    }
</div>
<script>
    $(document).ready(function () {
        $(".product-Quantity").on("change", function () {
            console.log($(this));
            console.log($(this)[0]);
            console.log($(this)[0].options[$(this)[0].selectedIndex].text);
            var id = Number.parseInt($(".product-Quantity")[0].id);
            var Quantity = Number.parseInt($(this)[0].options[$(this)[0].selectedIndex].text);
            $.ajax({
                method: "GET",
                url: 'ShoppingCart/ChangeQuantity',
                data: { Id: id, quantity: Quantity },
                success:
                    function (data) {
                        data = JSON.parse(data);
                        if (data.Status == "error") {
                            alert("Error: " + data.Message);
                            console.log("Error: " + data.Message);
                        }
                        else {
                            var selectedQuantities = $(".product-Quantity :selected").text().split("");
                            var SubTotal = 0;
                            for (let i = 0; i < selectedQuantities.length; i++) {
                                var productRow = $(".product-row")[i];
                                let pricePerItem = productRow.getElementsByClassName("PricePerItem")[0].innerHTML.replace(": R ", "").replace(",", ".");
                                let selectedQuantity = Number.parseInt(selectedQuantities[i]);
                                let TotalPerItem = Math.round(((selectedQuantity * pricePerItem) + Number.EPSILON) * 100) / 100;
                                SubTotal += TotalPerItem;
                                productRow.getElementsByClassName("TotalPerItem")[0].innerHTML = TotalPerItem;
                            }
                            let VAT = 0.14 * SubTotal;
                            let VatOfSubTotal = Math.round((VAT + Number.EPSILON) * 100) / 100;
                            let Total = Math.round(((SubTotal + VatOfSubTotal) + Number.EPSILON) * 100) / 100;
                            $(".row")[0].getElementsByClassName("SubTotal")[0].innerHTML = ": R " + SubTotal;
                            $(".row")[0].getElementsByClassName("VatOfSubTotal")[0].innerHTML = ": R " + VatOfSubTotal;
                            $(".row")[0].getElementsByClassName("Total")[0].innerHTML = ": R " + Total;
                        }
                    },
                error:
                    function (err) {
                        console.log(err);
                        console.log(err);
                    }
            });
        });
        $(".btn-checkout").on('click', function () {
            var Amount = Number.parseFloat($(".row")[0].getElementsByClassName("Total")[0].innerHTML.replace(": R ", "").replace(",", "."));
            window.location.href = "Payment/Payment?Amount=" + Amount;
        });
        $(".btn-clearCart").on('click', function () {
            $.ajax({
                method: "GET",
                url: 'ShoppingCart/ClearCart',
                success:
                    function (data) {
                        data = JSON.parse(data);
                        if (data.Status == "error") {
                            alert("Error: " + data.Message);
                            console.log("Error: " + data.Message);
                        }
                        else {
                            var NumberofItems = $("#NumberofItems").val();
                            var productRows = $(".product-row");
                            for (let i = 0; i < NumberofItems; i++) {
                                productRows[i].fadeOut("slow");
                            }
                            $(".display-table").fadeOut("slow");
                            $(".Add-To-Cart").removeClass("d-none");
                        }
                    },
                error:
                    function (err) {
                        console.log(err);
                        console.log(err);
                    }
            });
        });
        $(".btn-clearCart").on('click', function () {
            $.ajax({
                method: "GET",
                url: 'ShoppingCart/ClearCart',
                success:
                    function (data) {
                        data = JSON.parse(data);
                        if (data.Status == "error") {
                            alert("Error: " + data.Message);
                            console.log("Error: " + data.Message);
                        }
                        else {
                            var NumberofItems = $("#NumberofItems").val();
                            var productRows = $(".product-row");
                            for (let i = 0; i < NumberofItems; i++) {
                                productRows[i].fadeOut("slow");
                            }
                            $(".display-table").fadeOut("slow");
                            $(".Add-To-Cart").removeClass("d-none");
                        }
                    },
                error:
                    function (err) {
                        console.log(err);
                        console.log(err);
                    }
            });
        });
    });
</script>
