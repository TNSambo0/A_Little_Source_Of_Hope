@model IEnumerable<Orphanage>
@{
    ViewData["Title"] = "Orphanage";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="p-4">
    <div class="d-flex mb-2">
        <h2>Product List</h2>
        <a asp-action="Create" asp-controller="Product" class="btn btn-primary ml-auto">
            <i class="fa fa-plus-circle" aria-hidden="true"></i>&nbsp; Add New Orphanage
        </a>
    </div>
    <label class="d-none DisplayTable">@ViewBag.Orphanage</label>
    <table class="table table-hover product-table">
        <thead>
            <tr>
                <th scope="col">Orphanage name</th>
                <th scope="col">Manager name</th>
                <th scope="col">Phone number</th>
                <th scope="col">Email address</th>
                <th scope="col">&nbsp;</th>
            </tr>
        </thead>
        <tbody>
                <tr class="row-OrphanageId">                   
                    <td class="product-name">People's Hope</td>
                    <td>Norman Mfundo</td>
                    <td>0712345678</td>
                    <td>qwerty@gmail.com</td>
                    <td>
                        <a asp-controller="Product" asp-action="Edit" asp-route-id="OrphanageId" class="btn btn-warning">
                            <i class="fa fa-pencil-square-o" aria-hidden="true"></i>
                        </a>
                        <button class="btn btn-danger deleteItem" type="button" onclick="DeleteSingleItem(OrphanageId)">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                        </button>
                    </td>
                </tr>
        </tbody>
    </table>
    <div class="row mt-2 Create-Product-div">
        <div class="colsm-12 text-center">
            <p>No Product found. Click <a asp-action="Create" asp-controller="Product">here</a> to create a product.</p>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        const DeleteItemsArray = [];
        function DisplayTable() {
            const isModelEmpty = $("#DisplayTable").innerHTML;
            if (isModelEmpty == "True") {
                $(".product-table").addClass("d-none");
            }
            else {
                $(".Create-Product-div").addClass("d-none");
            }

        }
        DisplayTable();
        function BtnDeleteSelectedItems() {
            if (DeleteItemsArray.length == 0) {
                $(".btn-DeleteSelectedItems")[0].setAttributeNode(document.createAttribute("disabled"));
            }
            else { $(".btn-DeleteSelectedItems").removeAttr("disabled"); }
        } BtnDeleteSelectedItems();

        function SelectItem(input, ProductId) {
            const item = input.checked;
            var Index = DeleteItemsArray.indexOf(ProductId);
            if (item) {
                DeleteItemsArray.push(ProductId)
            }
            else {
                if (Index != -1) {
                    DeleteItemsArray.splice(Index, 1);
                }
            }
            BtnDeleteSelectedItems();
        }
        function DeleteSingleItem(ProductId) {
            Delete([ProductId]);
        }
        $(".btn-DeleteSelectedItems").on('click', function () {
            Delete(DeleteItemsArray);
        });
        function Delete(itemsArray) {
            $.ajax({
                method: "GET",
                url: '/Product/Delete',
                data: { ProductIds: itemsArray },
                success:
                    function (data) {
                        data = JSON.parse(data);
                        if (data.Status == "error") {
                            alert("Error: " + data.Message);
                            console.log("Error: " + data.Message);
                        }
                        else {
                            var NumberofItems = $("#NumberofItems").val();
                            if (data.DeleteItemsIds.length == NumberofItems) {
                                while (data.DeleteItemsIds.length != 0) {
                                    $(".row-" + data.DeleteItemsIds[0]).fadeOut("slow");
                                    data.DeleteItemsIds.splice(0, 1);
                                }
                                $(".tm-product-table").fadeOut("slow");
                                $(".Create-Product-div").removeClass("d-none");
                            }
                            else {
                                while (data.DeleteItemsIds.length != 0) {
                                    $(".row-" + data.DeleteItemsIds[0]).fadeOut("slow");
                                    data.DeleteItemsIds.splice(0, 1);
                                }
                            }
                            alert("Success: " + data.Status);
                            console.log("Success: " + data.Message);
                            BtnDeleteSelectedItems();
                        }
                    },
                error:
                    function (err) {
                        console.log(err);
                        console.log(err);
                    }
            });

        }
    </script>
}